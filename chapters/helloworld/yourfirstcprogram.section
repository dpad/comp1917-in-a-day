{{NL2BR}}
To keep the computer gods happy, we must begin with writing a helloworld program. This is a program that does nothing more than print the text &quot;Hello World!&quot;. So without further ado:
{{helloworld.c}}
Make a directory for your C programs and navigate to it, then create a new file in gedit (or your preferred text editor):
[[steve$ mkdir helloworld
steve$ cd helloworld
steve$ gedit helloworld.c
]]
Save the file in your C directory with the name helloworld.c.

Now we can compile it with gcc:
[[steve$ gcc -Wall -Werror -O -o helloworld helloworld.c
]]
And finally, we can run the program:
[[steve$ ./helloworld
]]
Congratulations! You just compiled and executed your first C program!

<img src='/img/patyourselfontheback.jpg'><sub class='imgsub'>Pat yourself on the back!</sub>

<h2>What does this mean!?</h2>
Line 1:
stdio.h is a header file that contains function definitions for functions used for reading and writing on the screen. 
#include is a keyword in C that places the entire contents of the included file with the source code when it is compiled. It is essentially the same as copying all the code in the header file into your source file. This line is necessary in any program that reads from or writes to the command line (which will be most of your programs).

Line 2:
White space - C ignores white space (spaces, tabs and new lines). This means that you can space out your code as much as you like. This helps make it easy to read, so don't feel that you have to cram all your code into as little space as possible.

Line 3:
Beginning of definition of main function. In C, the main function is the only function that is called when the program is executed. Here is a breakdown of this line.
int - (integer) the "return" type of this function. We'll learn more about this when we learn about functions.
main - the name of the function
(int argc, char *argv[]) - a list of arguments. For the main function, arguments are entered at the command line following the program name when the program is executed. argc is an integer that refers to the number of arguments given. argv is a list of strings that are the actual arguments.

<em>Don't stress if none of this makes any sense to you yet.</em>
Keep reading through the course and more and more will begin to make sense.

Line 4:
A comment (something C ignores completely). Single line comments in C are started with "//". Comments can follow code. Multiline comments begin with /* and end with */. A useful debuging trick is using comments to disable certain parts of code so you can see which part is problematic.

Line 5:
printf - the f stands for formatted - but more on that later. printf is used to print text to standard output (in other words, the command line you're running the program in). The '\n' is a newline character (essentially what happens if you press ENTER in a text editor). '\' is used to escape certain characters to make special characters. '\n' is used very often.

Line 7:
Specifies the return value of the function. For the main function, it is always 0. This tells the operating system that the program terminated correctly.
